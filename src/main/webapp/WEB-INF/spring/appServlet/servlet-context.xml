<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars" />
	<mvc:resources mapping="/static/**" location="/static/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="mk.dimitriev.cargo" />
	<context:property-placeholder location="classpath:database.properties" />
	
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${database.driver}" />
		<beans:property name="url" value="${database.url}" />
		<beans:property name="username" value="${database.user}" />
		<beans:property name="password" value="${database.password}" />
	</beans:bean>
    
    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>mk.dimitriev.cargo.model.CargoUser</beans:value>
				<beans:value>mk.dimitriev.cargo.model.UserRole</beans:value>
				<beans:value>mk.dimitriev.cargo.model.Address</beans:value>				
				<beans:value>mk.dimitriev.cargo.model.Auction</beans:value>
				<beans:value>mk.dimitriev.cargo.model.Carrier</beans:value>
				<beans:value>mk.dimitriev.cargo.model.Company</beans:value>
				<beans:value>mk.dimitriev.cargo.model.ContactInfo</beans:value>
				<beans:value>mk.dimitriev.cargo.model.Firm</beans:value>
				<beans:value>mk.dimitriev.cargo.model.Load</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.format_sql">${hibernate.format_sql}</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.update}</beans:prop>
			</beans:props>
		</beans:property>
    </beans:bean>
     
    <tx:annotation-driven />
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>
    
	<beans:bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />	
</beans:beans>
